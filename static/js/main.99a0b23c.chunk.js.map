{"version":3,"sources":["hooks/useObserverLazyLoad.js","components/item.jsx","components/itemList.jsx","components/header.jsx","components/player.jsx","app.jsx","store/store.js","repository/repository.js","index.js"],"names":["useObserverLazyLoad","useState","isloaded","setIsLoaded","itemRef","useRef","useEffect","io","IntersectionObserver","isIntersecting","unobserve","current","threshold","observe","disconnect","ThumbContainer","styled","div","Thumb","props","bg","Skeleton","observer","view","item","onItemClick","diffDate","useCallback","date","diff","Date","getTime","parseInt","className","ref","onClick","window","scrollTo","top","snippet","thumbnails","medium","url","title","channelTitle","statistics","viewCount","publishedAt","items","map","id","indexOf","onSubmit","inputRef","onSearchBar","href","viewBox","preserveAspectRatio","transform","fill","d","type","stype","placeholder","allowFullScreen","allow","src","toLocaleString","substr","likeCount","dislikeCount","description","document","querySelector","classList","toggle","inject","store","sentinelRef","e","preventDefault","value","addPage","loaded","addNextPage","isload","repository","key","fetchData","params","pageToken","a","esc","encodeURIComponent","query","Object","keys","k","join","fetch","getRequestOptions","response","json","console","log","getItemsId","keyword","this","method","redirect","process","observable","makeObservable","popular","chart","regionCode","search","nextPageToken","toJS","_items","computed","action","then","runInAction","videoId","concat","ReactDOM","render","Store","getElementById"],"mappings":"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","file":"static/js/main.99a0b23c.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nfunction useObserverLazyLoad() {\n  const [isloaded, setIsLoaded] = useState(false);\n  const itemRef = useRef(null);\n\n  useEffect(() => {\n    let io;\n    if (itemRef) {\n      io = new IntersectionObserver(\n        ([entry]) => {\n          if (!entry.isIntersecting) {\n            return;\n          }\n          setIsLoaded(true);\n          io.unobserve(itemRef.current);\n        },\n        { threshold: 0 }\n      );\n\n      io.observe(itemRef.current);\n    }\n\n    return () => io && io.disconnect(itemRef);\n  }, [itemRef]);\n\n  return { isloaded, itemRef };\n}\n\nexport default useObserverLazyLoad;\n","import React, { useCallback } from 'react';\nimport { observer } from 'mobx-react';\nimport useObserverLazyLoad from '../hooks/useObserverLazyLoad';\nimport styled from 'styled-components';\n\nconst Item = ({ item, onItemClick }) => {\n  const { isloaded, itemRef } = useObserverLazyLoad();\n\n  const itemClick = () => {\n    onItemClick(item);\n    window.scrollTo({ top: 0 });\n  };\n\n  const parseIntView = view => {\n    if (view >= 10000) {\n      return parseInt(view / 10000) + '만';\n    } else return view;\n  };\n\n  const diffDate = useCallback(date => {\n    const curDate = new Date().getTime();\n    const itemDate = new Date(date).getTime();\n    let diff = curDate - itemDate;\n    diff = parseInt(diff / (1000 * 60 * 60));\n    if (diff < 24) {\n      return diff + '시간';\n    } else if (diff >= 24 && diff < 168) {\n      return parseInt(diff / 24) + '일';\n    } else if (diff >= 168 && diff < 672) {\n      return parseInt(diff / 168) + '주';\n    } else if (diff >= 672 && diff < 8760) {\n      return parseInt(diff / 672) + '개월';\n    } else if (diff >= 8760) {\n      return parseInt(diff / 8760) + '년';\n    }\n  }, []);\n\n  return (\n    <li className=\"item\" ref={itemRef}>\n      {isloaded ? (\n        <div className=\"item-box\" onClick={itemClick}>\n          <ThumbContainer>\n            <Thumb bg={item.snippet.thumbnails.medium.url}>\n              <div></div>\n            </Thumb>\n          </ThumbContainer>\n          <div className=\"meta\">\n            <h4 className=\"title\">{item.snippet.title}</h4>\n            <div className=\"channel-title\">{item.snippet.channelTitle}</div>\n            <div className=\"meta-data item-meta-data\">\n              <span>조회수 {parseIntView(item.statistics.viewCount)}회</span>\n              <span>{diffDate(item.snippet.publishedAt)} 전</span>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"item-box\">\n          <ThumbContainer>\n            <Thumb>\n              <div></div>\n            </Thumb>\n          </ThumbContainer>\n          <div className=\"meta\">\n            <Skeleton />\n            <Skeleton />\n          </div>\n        </div>\n      )}\n    </li>\n  );\n};\n\nconst ThumbContainer = styled.div`\n  width: 100%;\n`;\n\nconst Thumb = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  padding-bottom: 56.25%;\n  & > div {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: ${props =>\n      props.bg ? `url(${props.bg})` : 'var(--search-form-border-color)'};\n    background-size: contain;\n    transition: ease 0.2s;\n  }\n`;\n\nconst Skeleton = styled.div`\n  background-color: var(--search-form-border-color);\n  width: 100%;\n  height: 20px;\n  margin-top: 12px;\n  margin-bottom: 4px;\n  & + & {\n    width: 80%;\n  }\n`;\n\nexport default observer(Item);\n","import React from 'react';\nimport Item from './item';\nimport { observer } from 'mobx-react';\n\nconst ItemList = ({ items, onItemClick }) => {\n  return (\n    <ul className=\"item-list\">\n      {items.map(item => (\n        <Item\n          key={item.id + items.indexOf(item)}\n          item={item}\n          onItemClick={onItemClick}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default observer(ItemList);\n","import { React } from 'react';\nimport { observer } from 'mobx-react';\n\nconst Header = ({ onSubmit, inputRef, onSearchBar }) => {\n  return (\n    <header className=\"header\">\n      <a href=\"https://seheeyun.github.io/youtube-clone/\" className=\"logo\">\n        <svg viewBox=\"0 0 50 50\" preserveAspectRatio=\"xMidYMid meet\">\n          <g transform=\"translate(0,50) scale(0.1,-0.1)\" fill=\"#ff0000\">\n            <path\n              d=\"M60 411 c-40 -11 -54 -54 -54 -161 0 -115 13 -150 63 -163 19 -5 113\n-7 208 -5 141 2 175 6 188 19 26 26 40 138 27 216 -6 36 -18 74 -27 82 -13 13\n-47 16 -198 18 -100 1 -193 -2 -207 -6z m208 -111 c39 -23 72 -46 72 -50 0 -6\n-81 -58 -152 -97 -5 -2 -8 41 -8 97 0 56 3 99 8 97 4 -2 40 -23 80 -47z\"\n            />\n          </g>\n        </svg>\n        <span>YunTube</span>\n      </a>\n      <div className=\"search-box\">\n        <form className=\"search-form\" onSubmit={onSubmit}>\n          <button\n            type=\"button\"\n            title=\"뒤로\"\n            className=\"back-btn\"\n            onClick={onSearchBar}\n          >\n            <i className=\"fas fa-arrow-left\"></i>\n          </button>\n          <input ref={inputRef} stype=\"text\" placeholder=\"검색\" />\n          <button type=\"submit\" title=\"검색\" className=\"search-btn\">\n            <i className=\"fas fa-search\"></i>\n          </button>\n        </form>\n      </div>\n      <div className=\"top-bar\">\n        <button\n          type=\"button\"\n          title=\"검색\"\n          className=\"search-btn\"\n          onClick={onSearchBar}\n        >\n          <i className=\"fas fa-search\"></i>\n        </button>\n        <button title=\"로그인\" className=\"avatar-btn\">\n          <i className=\"fas fa-user\"></i>\n        </button>\n      </div>\n    </header>\n  );\n};\n\nexport default observer(Header);\n","import React from 'react';\nimport { observer } from 'mobx-react';\n\nconst Player = ({ item }) => {\n  return (\n    <div className=\"player-box\">\n      <div className=\"player-video-box\">\n        <div className=\"player-video\">\n          <iframe\n            title=\"video\"\n            id=\"player\"\n            type=\"text/html\"\n            allowFullScreen\n            allow=\"autoplay\"\n            src={`https://www.youtube.com/embed/${item.id}?autoplay=1`}\n          />\n        </div>\n      </div>\n      <div className=\"video-info-box\">\n        <div className=\"video-info\">\n          <h1 className=\"title\">{item.snippet.title}</h1>\n          <div>\n            <div className=\"meta-data\">\n              <span>\n                조회수 {parseInt(item.statistics.viewCount).toLocaleString()}회\n              </span>\n              <span>{item.snippet.publishedAt.substr(0, 10)}</span>\n            </div>\n            <div className=\"like-disLike\">\n              <button title=\"좋아요\">\n                <i className=\"fas fa-thumbs-up\"></i> {item.statistics.likeCount}\n              </button>\n              <button title=\"싫어요\">\n                <i className=\"fas fa-thumbs-down\"></i>{' '}\n                {item.statistics.dislikeCount}\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"video-meta\">\n          <div className=\"meta-thumb\">\n            {item.snippet.channelTitle.substr(0, 1)}\n          </div>\n          <div className=\"meta\">\n            <span>{item.snippet.channelTitle}</span>\n            <span>{item.snippet.description}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default observer(Player);\n","import './app.css';\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport ItemList from './components/itemList';\nimport Header from './components/header';\nimport Player from './components/player';\nimport { inject, observer } from 'mobx-react';\n\nconst App = ({ store }) => {\n  const inputRef = useRef();\n  const sentinelRef = useRef();\n\n  const onSubmit = useCallback(\n    e => {\n      e.preventDefault();\n      const value = inputRef.current.value;\n      value && store.addPage(value);\n      onSearchBar();\n    },\n    [store]\n  );\n\n  useEffect(() => {\n    store.addPage();\n    store.loaded(true);\n  }, [store]);\n\n  useEffect(() => {\n    let io;\n    if (sentinelRef.current) {\n      io = new IntersectionObserver(\n        ([entry]) => {\n          if (entry.isIntersecting) {\n            !inputRef.current.value\n              ? store.addNextPage()\n              : store.addNextPage(inputRef.current.value);\n          }\n        },\n        { threshold: 0 }\n      );\n      io.observe(sentinelRef.current);\n    }\n    return () => io && io.disconnect();\n  }, [sentinelRef.current, store]);\n\n  return (\n    <>\n      <Header\n        onSubmit={onSubmit}\n        onSearchBar={onSearchBar}\n        inputRef={inputRef}\n      />\n      <div className={`content ${store.item ? 'on-player' : ''}`}>\n        {store.item && <Player item={store.item} />}\n        {store.items && (\n          <ItemList items={store.items} onItemClick={store.onItemClick} />\n        )}\n        {store.isload && <div ref={sentinelRef} className=\"sentinel\"></div>}\n      </div>\n    </>\n  );\n};\n\nconst onSearchBar = () => {\n  const searchBox = document.querySelector('.search-box');\n  searchBox.classList.toggle('on-search-box');\n};\n\nexport default inject('store')(observer(App));\n","import {\n  action,\n  computed,\n  makeObservable,\n  observable,\n  runInAction,\n  toJS,\n} from 'mobx';\nimport Repository from '../repository/repository';\n\nconst repository = new Repository(process.env.REACT_APP_API_KEY);\nclass Store {\n  constructor() {\n    makeObservable(this);\n    this.popular = {\n      chart: 'mostPopular',\n      regionCode: 'KR',\n    };\n    this.search = {\n      id: null,\n    };\n    this.nextPageToken = null;\n  }\n\n  @observable.ref\n  _items = [];\n\n  @computed\n  get items() {\n    return toJS(this._items);\n  }\n\n  @observable.ref\n  item = null;\n\n  @action\n  addPage = keyword => {\n    this._items = [];\n    !keyword\n      ? repository.fetchData(this.popular).then(json => {\n          runInAction(() => {\n            this._items = json.items;\n            this.nextPageToken = json.nextPageToken;\n          });\n        })\n      : repository\n          .getItemsId(keyword)\n          .then(json => {\n            runInAction(() => {\n              this.nextPageToken = json.nextPageToken;\n            });\n            return json.items.map(item => item.id.videoId).join();\n          })\n          .then(id => {\n            this.search.id = id;\n            repository.fetchData(this.search).then(json => {\n              runInAction(() => {\n                this._items = json.items;\n                this.onItemClick(null);\n              });\n            });\n          });\n  };\n\n  @action\n  addNextPage = keyword => {\n    !keyword\n      ? repository.fetchData(this.popular, this.nextPageToken).then(json => {\n          runInAction(() => {\n            this._items = this._items.concat(json.items);\n            this.nextPageToken = json.nextPageToken;\n          });\n        })\n      : repository\n          .getItemsId(keyword, this.nextPageToken)\n          .then(json => {\n            runInAction(() => {\n              this.nextPageToken = json.nextPageToken;\n            });\n            return json.items.map(item => item.id.videoId).join();\n          })\n          .then(id => {\n            this.search.id = id;\n            repository.fetchData(this.search).then(json =>\n              runInAction(() => {\n                this._items = this._items.concat(json.items);\n              })\n            );\n          });\n  };\n\n  @action\n  onItemClick = item => {\n    this.item = item;\n  };\n\n  @observable\n  isload = false;\n\n  @action\n  loaded = loaded => {\n    if (loaded) {\n      this.isload = true;\n    } else {\n      this.isload = false;\n    }\n  };\n}\n\nexport default new Store();\n","class Repository {\n  constructor(key) {\n    this.key = key;\n    this.getRequestOptions = {\n      method: 'GET',\n      redirect: 'follow',\n    };\n  }\n\n  fetchData = async (params, pageToken) => {\n    const esc = encodeURIComponent;\n    const query = Object.keys(params)\n      .map(k => esc(k) + '=' + esc(params[k]))\n      .join('&');\n\n    try {\n      const response = await fetch(\n        `https://youtube.googleapis.com/youtube/v3/videos?part=snippet,statistics&maxResults=20&key=${this.key}&` +\n          query +\n          (pageToken ? `&pageToken=${pageToken}` : ''),\n        this.getRequestOptions\n      );\n      return await response.json();\n    } catch (error) {\n      return console.log('error', error);\n    }\n  };\n\n  getItemsId = async (keyword, pageToken) => {\n    try {\n      const response = await fetch(\n        `https://youtube.googleapis.com/youtube/v3/search?maxResults=20&q=${keyword}&type=video&key=${this.key}` +\n          (pageToken ? `&pageToken=${pageToken}` : ''),\n        this.getRequestOptions\n      );\n      return await response.json();\n    } catch (error) {\n      return console.log('error', error);\n    }\n  };\n}\n\nexport default Repository;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport { Provider } from 'mobx-react';\nimport Store from './store/store';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}