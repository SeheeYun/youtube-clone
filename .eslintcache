[{"/Users/yunsehee/Desktop/front-end/react/react-basic/youtube/src/app.jsx":"1","/Users/yunsehee/Desktop/front-end/react/react-basic/youtube/src/components/player.jsx":"2","/Users/yunsehee/Desktop/front-end/react/react-basic/youtube/src/index.js":"3","/Users/yunsehee/Desktop/front-end/react/react-basic/youtube/src/components/item.jsx":"4","/Users/yunsehee/Desktop/front-end/react/react-basic/youtube/src/components/itemList.jsx":"5","/Users/yunsehee/Desktop/front-end/react/react-basic/youtube/src/components/header.jsx":"6"},{"size":2365,"mtime":1613653675764,"results":"7","hashOfConfig":"8"},{"size":1190,"mtime":1613639028080,"results":"9","hashOfConfig":"8"},{"size":269,"mtime":1613561132914,"results":"10","hashOfConfig":"8"},{"size":1512,"mtime":1613647139305,"results":"11","hashOfConfig":"8"},{"size":538,"mtime":1613648035126,"results":"12","hashOfConfig":"8"},{"size":829,"mtime":1613577887180,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gmobqi",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/yunsehee/Desktop/front-end/react/react-basic/youtube/src/app.jsx",[],"/Users/yunsehee/Desktop/front-end/react/react-basic/youtube/src/components/player.jsx",[],"/Users/yunsehee/Desktop/front-end/react/react-basic/youtube/src/index.js",[],"/Users/yunsehee/Desktop/front-end/react/react-basic/youtube/src/components/item.jsx",["27","28","29"],"import React, { useEffect, useState } from 'react';\n\nconst Item = ({ id, thumb, snippet, viewCount, getVideo }) => {\n  const [view, setView] = useState(viewCount);\n  const [diff, setDiff] = useState();\n\n  useEffect(() => {\n    if (!viewCount) {\n      const metaData = document.querySelector('.meta_data');\n      metaData.setAttribute('class', 'none_meta_data');\n    } else {\n      if (view >= 10000) {\n        setView(view => {\n          return parseInt(view / 10000) + '만';\n        });\n      }\n\n      setDiff(() => {\n        const curDate = new Date().getTime();\n        const itemDate = new Date(snippet.publishedAt).getTime();\n        let diff = curDate - itemDate;\n        diff = parseInt((diff / (1000 * 60 * 60)) % 24);\n        if (diff >= 24) {\n          return '1일';\n        }\n        return diff + '시간';\n      });\n    }\n  }, []);\n\n  const itemClick = () => {\n    getVideo(id);\n  };\n\n  return (\n    <li className=\"item\">\n      <div className=\"item_box\" onClick={itemClick}>\n        <div className=\"thumb\">\n          <a href=\"#\">\n            <img src={thumb.url} alt=\"thumb\" />\n          </a>\n        </div>\n        <div className=\"meta\">\n          <a className=\"title\" href=\"#\">\n            {snippet.title}\n          </a>\n          <div className=\"channel_title\">{snippet.channelTitle}</div>\n          <div className=\"meta_data\">\n            <span>조회수 {view}회</span>\n            <span>{diff} 전</span>\n          </div>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default Item;\n","/Users/yunsehee/Desktop/front-end/react/react-basic/youtube/src/components/itemList.jsx",[],"/Users/yunsehee/Desktop/front-end/react/react-basic/youtube/src/components/header.jsx",["30"],{"ruleId":"31","severity":1,"message":"32","line":29,"column":6,"nodeType":"33","endLine":29,"endColumn":8,"suggestions":"34"},{"ruleId":"35","severity":1,"message":"36","line":39,"column":11,"nodeType":"37","endLine":39,"endColumn":23},{"ruleId":"35","severity":1,"message":"36","line":44,"column":11,"nodeType":"37","endLine":44,"endColumn":41},{"ruleId":"35","severity":1,"message":"36","line":14,"column":7,"nodeType":"37","endLine":14,"endColumn":36},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'snippet.publishedAt', 'view', and 'viewCount'. Either include them or remove the dependency array. If 'setDiff' needs the current value of 'snippet.publishedAt', you can also switch to useReducer instead of useState and read 'snippet.publishedAt' in the reducer.","ArrayExpression",["38"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"39","fix":"40"},"Update the dependencies array to be: [snippet.publishedAt, view, viewCount]",{"range":"41","text":"42"},[834,836],"[snippet.publishedAt, view, viewCount]"]